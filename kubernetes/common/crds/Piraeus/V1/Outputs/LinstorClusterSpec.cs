// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Piraeus.V1
{

    /// <summary>
    /// LinstorClusterSpec defines the desired state of LinstorCluster
    /// </summary>
    [OutputType]
    public sealed class LinstorClusterSpec
    {
        /// <summary>
        /// ApiTLS secures the LINSTOR API. 
        ///  This configures the TLS key and certificate used to secure the LINSTOR API.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecApiTLS ApiTLS;
        /// <summary>
        /// ExternalController references an external controller. When set, the Operator will skip deploying a LINSTOR Controller and instead use the external cluster to register satellites.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecExternalController ExternalController;
        /// <summary>
        /// InternalTLS secures the connection between LINSTOR Controller and Satellite. 
        ///  This configures the client certificate used when the Controller connects to a Satellite. This only has an effect when the Satellite is configured to for secure connections using `LinstorSatellite.spec.internalTLS`.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecInternalTLS InternalTLS;
        /// <summary>
        /// LinstorPassphraseSecret used to configure the LINSTOR master passphrase. 
        ///  The referenced secret must contain a single key "MASTER_PASSPHRASE". The master passphrase is used to * Derive encryption keys for volumes using the LUKS layer. * Store credentials for accessing remotes for backups. See https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-encrypt_commands for more information.
        /// </summary>
        public readonly string LinstorPassphraseSecret;
        /// <summary>
        /// NodeSelector selects the nodes on which LINSTOR Satellites will be deployed. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// Patches is a list of kustomize patches to apply. 
        ///  See https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/patches/ for how to create patches.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecPatches> Patches;
        /// <summary>
        /// Properties to apply on the cluster level. 
        ///  Use to create default settings for DRBD that should apply to all resources or to configure some other cluster wide default.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecProperties> Properties;
        /// <summary>
        /// Repository used to pull workload images.
        /// </summary>
        public readonly string Repository;

        [OutputConstructor]
        private LinstorClusterSpec(
            Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecApiTLS apiTLS,

            Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecExternalController externalController,

            Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecInternalTLS internalTLS,

            string linstorPassphraseSecret,

            ImmutableDictionary<string, string> nodeSelector,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecPatches> patches,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Piraeus.V1.LinstorClusterSpecProperties> properties,

            string repository)
        {
            ApiTLS = apiTLS;
            ExternalController = externalController;
            InternalTLS = internalTLS;
            LinstorPassphraseSecret = linstorPassphraseSecret;
            NodeSelector = nodeSelector;
            Patches = patches;
            Properties = properties;
            Repository = repository;
        }
    }
}
