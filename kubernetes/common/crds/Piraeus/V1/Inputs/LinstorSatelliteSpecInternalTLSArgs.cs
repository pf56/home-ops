// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Piraeus.V1
{

    /// <summary>
    /// InternalTLS configures secure communication for the LINSTOR Satellite. 
    ///  If set, the control traffic between LINSTOR Controller and Satellite will be encrypted using mTLS. The Controller will use the client key from `LinstorCluster.spec.internalTLS` when connecting.
    /// </summary>
    public class LinstorSatelliteSpecInternalTLSArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CertManager references a cert-manager Issuer or ClusterIssuer. If set, a Certificate resource will be created, provisioning the secret references in SecretName using the issuer configured here.
        /// </summary>
        [Input("certManager")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Piraeus.V1.LinstorSatelliteSpecInternalTLSCertManagerArgs>? CertManager { get; set; }

        /// <summary>
        /// SecretName references a secret holding the TLS key and certificates.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        public LinstorSatelliteSpecInternalTLSArgs()
        {
        }
        public static new LinstorSatelliteSpecInternalTLSArgs Empty => new LinstorSatelliteSpecInternalTLSArgs();
    }
}
