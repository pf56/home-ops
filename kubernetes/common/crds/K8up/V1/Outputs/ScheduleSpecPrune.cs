// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8up.V1
{

    /// <summary>
    /// PruneSchedule manages the schedules for the prunes
    /// </summary>
    [OutputType]
    public sealed class ScheduleSpecPrune
    {
        /// <summary>
        /// ActiveDeadlineSeconds specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it. Value must be positive integer if given.
        /// </summary>
        public readonly int ActiveDeadlineSeconds;
        /// <summary>
        /// Backend contains the restic repo where the job should backup to.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneBackend Backend;
        public readonly bool ConcurrentRunsAllowed;
        /// <summary>
        /// FailedJobsHistoryLimit amount of failed jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int FailedJobsHistoryLimit;
        /// <summary>
        /// KeepJobs amount of jobs to keep for later analysis. 
        ///  Deprecated: Use FailedJobsHistoryLimit and SuccessfulJobsHistoryLimit respectively.
        /// </summary>
        public readonly int KeepJobs;
        /// <summary>
        /// PodSecurityContext describes the security context with which this action shall be executed.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPrunePodSecurityContext PodSecurityContext;
        /// <summary>
        /// Resources describes the compute resource requirements (cpu, memory, etc.)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneResources Resources;
        /// <summary>
        /// Retention sets how many backups should be kept after a forget and prune
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneRetention Retention;
        /// <summary>
        /// ScheduleDefinition is the actual cron-type expression that defines the interval of the actions.
        /// </summary>
        public readonly string Schedule;
        /// <summary>
        /// SuccessfulJobsHistoryLimit amount of successful jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int SuccessfulJobsHistoryLimit;

        [OutputConstructor]
        private ScheduleSpecPrune(
            int activeDeadlineSeconds,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneBackend backend,

            bool concurrentRunsAllowed,

            int failedJobsHistoryLimit,

            int keepJobs,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPrunePodSecurityContext podSecurityContext,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneResources resources,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPruneRetention retention,

            string schedule,

            int successfulJobsHistoryLimit)
        {
            ActiveDeadlineSeconds = activeDeadlineSeconds;
            Backend = backend;
            ConcurrentRunsAllowed = concurrentRunsAllowed;
            FailedJobsHistoryLimit = failedJobsHistoryLimit;
            KeepJobs = keepJobs;
            PodSecurityContext = podSecurityContext;
            Resources = resources;
            Retention = retention;
            Schedule = schedule;
            SuccessfulJobsHistoryLimit = successfulJobsHistoryLimit;
        }
    }
}
