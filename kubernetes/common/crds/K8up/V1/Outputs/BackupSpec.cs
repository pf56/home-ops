// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8up.V1
{

    /// <summary>
    /// BackupSpec defines a single backup. It must contain all information to connect to the backup repository when applied. If used with defaults or schedules the operator will ensure that the defaults are applied before creating the object on the API.
    /// </summary>
    [OutputType]
    public sealed class BackupSpec
    {
        /// <summary>
        /// ActiveDeadlineSeconds specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it. Value must be positive integer if given.
        /// </summary>
        public readonly int ActiveDeadlineSeconds;
        /// <summary>
        /// Backend contains the restic repo where the job should backup to.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecBackend Backend;
        /// <summary>
        /// FailedJobsHistoryLimit amount of failed jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int FailedJobsHistoryLimit;
        /// <summary>
        /// KeepJobs amount of jobs to keep for later analysis. 
        ///  Deprecated: Use FailedJobsHistoryLimit and SuccessfulJobsHistoryLimit respectively.
        /// </summary>
        public readonly int KeepJobs;
        /// <summary>
        /// PodSecurityContext describes the security context with which this action shall be executed.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecPodSecurityContext PodSecurityContext;
        /// <summary>
        /// PromURL sets a prometheus push URL where the backup container send metrics to
        /// </summary>
        public readonly string PromURL;
        /// <summary>
        /// Resources describes the compute resource requirements (cpu, memory, etc.)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecResources Resources;
        /// <summary>
        /// StatsURL sets an arbitrary URL where the restic container posts metrics and information about the snapshots to. This is in addition to the prometheus pushgateway.
        /// </summary>
        public readonly string StatsURL;
        /// <summary>
        /// SuccessfulJobsHistoryLimit amount of successful jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int SuccessfulJobsHistoryLimit;
        /// <summary>
        /// Tags is a list of arbitrary tags that get added to the backup via Restic's tagging system
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private BackupSpec(
            int activeDeadlineSeconds,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecBackend backend,

            int failedJobsHistoryLimit,

            int keepJobs,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecPodSecurityContext podSecurityContext,

            string promURL,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.BackupSpecResources resources,

            string statsURL,

            int successfulJobsHistoryLimit,

            ImmutableArray<string> tags)
        {
            ActiveDeadlineSeconds = activeDeadlineSeconds;
            Backend = backend;
            FailedJobsHistoryLimit = failedJobsHistoryLimit;
            KeepJobs = keepJobs;
            PodSecurityContext = podSecurityContext;
            PromURL = promURL;
            Resources = resources;
            StatsURL = statsURL;
            SuccessfulJobsHistoryLimit = successfulJobsHistoryLimit;
            Tags = tags;
        }
    }
}
