// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8up.V1
{

    /// <summary>
    /// ScheduleSpec defines the schedules for the various job types.
    /// </summary>
    [OutputType]
    public sealed class ScheduleSpec
    {
        /// <summary>
        /// ArchiveSchedule manages schedules for the archival service
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecArchive Archive;
        /// <summary>
        /// Backend allows configuring several backend implementations. It is expected that users only configure one storage type.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecBackend Backend;
        /// <summary>
        /// BackupSchedule manages schedules for the backup service
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecBackup Backup;
        /// <summary>
        /// CheckSchedule manages the schedules for the checks
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecCheck Check;
        /// <summary>
        /// FailedJobsHistoryLimit amount of failed jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int FailedJobsHistoryLimit;
        /// <summary>
        /// KeepJobs amount of jobs to keep for later analysis. 
        ///  Deprecated: Use FailedJobsHistoryLimit and SuccessfulJobsHistoryLimit respectively.
        /// </summary>
        public readonly int KeepJobs;
        /// <summary>
        /// PodSecurityContext describes the security context with which actions (such as backups) shall be executed.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPodSecurityContext PodSecurityContext;
        /// <summary>
        /// PruneSchedule manages the schedules for the prunes
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPrune Prune;
        /// <summary>
        /// ResourceRequirementsTemplate describes the compute resource requirements (cpu, memory, etc.)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecResourceRequirementsTemplate ResourceRequirementsTemplate;
        /// <summary>
        /// RestoreSchedule manages schedules for the restore service
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecRestore Restore;
        /// <summary>
        /// SuccessfulJobsHistoryLimit amount of successful jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int SuccessfulJobsHistoryLimit;

        [OutputConstructor]
        private ScheduleSpec(
            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecArchive archive,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecBackend backend,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecBackup backup,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecCheck check,

            int failedJobsHistoryLimit,

            int keepJobs,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPodSecurityContext podSecurityContext,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecPrune prune,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecResourceRequirementsTemplate resourceRequirementsTemplate,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.ScheduleSpecRestore restore,

            int successfulJobsHistoryLimit)
        {
            Archive = archive;
            Backend = backend;
            Backup = backup;
            Check = check;
            FailedJobsHistoryLimit = failedJobsHistoryLimit;
            KeepJobs = keepJobs;
            PodSecurityContext = podSecurityContext;
            Prune = prune;
            ResourceRequirementsTemplate = resourceRequirementsTemplate;
            Restore = restore;
            SuccessfulJobsHistoryLimit = successfulJobsHistoryLimit;
        }
    }
}
