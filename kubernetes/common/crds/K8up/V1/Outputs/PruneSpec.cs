// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8up.V1
{

    /// <summary>
    /// PruneSpec needs to contain the repository information as well as the desired retention policies.
    /// </summary>
    [OutputType]
    public sealed class PruneSpec
    {
        /// <summary>
        /// ActiveDeadlineSeconds specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it. Value must be positive integer if given.
        /// </summary>
        public readonly int ActiveDeadlineSeconds;
        /// <summary>
        /// Backend contains the restic repo where the job should backup to.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecBackend Backend;
        /// <summary>
        /// FailedJobsHistoryLimit amount of failed jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int FailedJobsHistoryLimit;
        /// <summary>
        /// KeepJobs amount of jobs to keep for later analysis. 
        ///  Deprecated: Use FailedJobsHistoryLimit and SuccessfulJobsHistoryLimit respectively.
        /// </summary>
        public readonly int KeepJobs;
        /// <summary>
        /// PodSecurityContext describes the security context with which this action shall be executed.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecPodSecurityContext PodSecurityContext;
        /// <summary>
        /// Resources describes the compute resource requirements (cpu, memory, etc.)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecResources Resources;
        /// <summary>
        /// Retention sets how many backups should be kept after a forget and prune
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecRetention Retention;
        /// <summary>
        /// SuccessfulJobsHistoryLimit amount of successful jobs to keep for later analysis. KeepJobs is used property is not specified.
        /// </summary>
        public readonly int SuccessfulJobsHistoryLimit;

        [OutputConstructor]
        private PruneSpec(
            int activeDeadlineSeconds,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecBackend backend,

            int failedJobsHistoryLimit,

            int keepJobs,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecPodSecurityContext podSecurityContext,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecResources resources,

            Pulumi.Kubernetes.Types.Outputs.K8up.V1.PruneSpecRetention retention,

            int successfulJobsHistoryLimit)
        {
            ActiveDeadlineSeconds = activeDeadlineSeconds;
            Backend = backend;
            FailedJobsHistoryLimit = failedJobsHistoryLimit;
            KeepJobs = keepJobs;
            PodSecurityContext = podSecurityContext;
            Resources = resources;
            Retention = retention;
            SuccessfulJobsHistoryLimit = successfulJobsHistoryLimit;
        }
    }
}
