// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Traefik.V1Alpha1
{

    /// <summary>
    /// SourceCriterion defines what criterion is used to group requests as originating from a common source. If several strategies are defined at the same time, an error will be raised. If none are set, the default is to use the requestHost. More info: https://doc.traefik.io/traefik/v2.10/middlewares/http/inflightreq/#sourcecriterion
    /// </summary>
    [OutputType]
    public sealed class MiddlewareSpecInFlightReqSourceCriterion
    {
        /// <summary>
        /// IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP. More info: https://doc.traefik.io/traefik/v2.10/middlewares/http/ipwhitelist/#ipstrategy
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Traefik.V1Alpha1.MiddlewareSpecInFlightReqSourceCriterionIpStrategy IpStrategy;
        /// <summary>
        /// RequestHeaderName defines the name of the header used to group incoming requests.
        /// </summary>
        public readonly string RequestHeaderName;
        /// <summary>
        /// RequestHost defines whether to consider the request Host as the source.
        /// </summary>
        public readonly bool RequestHost;

        [OutputConstructor]
        private MiddlewareSpecInFlightReqSourceCriterion(
            Pulumi.Kubernetes.Types.Outputs.Traefik.V1Alpha1.MiddlewareSpecInFlightReqSourceCriterionIpStrategy ipStrategy,

            string requestHeaderName,

            bool requestHost)
        {
            IpStrategy = ipStrategy;
            RequestHeaderName = requestHeaderName;
            RequestHost = requestHost;
        }
    }
}
