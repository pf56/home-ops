// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Traefik.V1Alpha1
{

    /// <summary>
    /// TLS defines the configuration used to secure the connection to the authentication server.
    /// </summary>
    [OutputType]
    public sealed class MiddlewareSpecForwardAuthTls
    {
        public readonly bool CaOptional;
        /// <summary>
        /// CASecret is the name of the referenced Kubernetes Secret containing the CA to validate the server certificate. The CA certificate is extracted from key `tls.ca` or `ca.crt`.
        /// </summary>
        public readonly string CaSecret;
        /// <summary>
        /// CertSecret is the name of the referenced Kubernetes Secret containing the client certificate. The client certificate is extracted from the keys `tls.crt` and `tls.key`.
        /// </summary>
        public readonly string CertSecret;
        /// <summary>
        /// InsecureSkipVerify defines whether the server certificates should be validated.
        /// </summary>
        public readonly bool InsecureSkipVerify;

        [OutputConstructor]
        private MiddlewareSpecForwardAuthTls(
            bool caOptional,

            string caSecret,

            string certSecret,

            bool insecureSkipVerify)
        {
            CaOptional = caOptional;
            CaSecret = caSecret;
            CertSecret = certSecret;
            InsecureSkipVerify = insecureSkipVerify;
        }
    }
}
