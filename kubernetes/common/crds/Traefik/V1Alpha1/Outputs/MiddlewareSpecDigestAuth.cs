// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Traefik.V1Alpha1
{

    /// <summary>
    /// DigestAuth holds the digest auth middleware configuration. This middleware restricts access to your services to known users. More info: https://doc.traefik.io/traefik/v2.10/middlewares/http/digestauth/
    /// </summary>
    [OutputType]
    public sealed class MiddlewareSpecDigestAuth
    {
        /// <summary>
        /// HeaderField defines a header field to store the authenticated user. More info: https://doc.traefik.io/traefik/v2.10/middlewares/http/basicauth/#headerfield
        /// </summary>
        public readonly string HeaderField;
        /// <summary>
        /// Realm allows the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme. Default: traefik.
        /// </summary>
        public readonly string Realm;
        /// <summary>
        /// RemoveHeader defines whether to remove the authorization header before forwarding the request to the backend.
        /// </summary>
        public readonly bool RemoveHeader;
        /// <summary>
        /// Secret is the name of the referenced Kubernetes Secret containing user credentials.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private MiddlewareSpecDigestAuth(
            string headerField,

            string realm,

            bool removeHeader,

            string secret)
        {
            HeaderField = headerField;
            Realm = realm;
            RemoveHeader = removeHeader;
            Secret = secret;
        }
    }
}
