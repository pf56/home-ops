// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Traefik.V1Alpha1
{

    /// <summary>
    /// TLSOptionSpec defines the desired state of a TLSOption.
    /// </summary>
    public class TLSOptionSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("alpnProtocols")]
        private InputList<string>? _alpnProtocols;

        /// <summary>
        /// ALPNProtocols defines the list of supported application level protocols for the TLS handshake, in order of preference. More info: https://doc.traefik.io/traefik/v2.10/https/tls/#alpn-protocols
        /// </summary>
        public InputList<string> AlpnProtocols
        {
            get => _alpnProtocols ?? (_alpnProtocols = new InputList<string>());
            set => _alpnProtocols = value;
        }

        [Input("cipherSuites")]
        private InputList<string>? _cipherSuites;

        /// <summary>
        /// CipherSuites defines the list of supported cipher suites for TLS versions up to TLS 1.2. More info: https://doc.traefik.io/traefik/v2.10/https/tls/#cipher-suites
        /// </summary>
        public InputList<string> CipherSuites
        {
            get => _cipherSuites ?? (_cipherSuites = new InputList<string>());
            set => _cipherSuites = value;
        }

        /// <summary>
        /// ClientAuth defines the server's policy for TLS Client Authentication.
        /// </summary>
        [Input("clientAuth")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Traefik.V1Alpha1.TLSOptionSpecClientAuthArgs>? ClientAuth { get; set; }

        [Input("curvePreferences")]
        private InputList<string>? _curvePreferences;

        /// <summary>
        /// CurvePreferences defines the preferred elliptic curves in a specific order. More info: https://doc.traefik.io/traefik/v2.10/https/tls/#curve-preferences
        /// </summary>
        public InputList<string> CurvePreferences
        {
            get => _curvePreferences ?? (_curvePreferences = new InputList<string>());
            set => _curvePreferences = value;
        }

        /// <summary>
        /// MaxVersion defines the maximum TLS version that Traefik will accept. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13. Default: None.
        /// </summary>
        [Input("maxVersion")]
        public Input<string>? MaxVersion { get; set; }

        /// <summary>
        /// MinVersion defines the minimum TLS version that Traefik will accept. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13. Default: VersionTLS10.
        /// </summary>
        [Input("minVersion")]
        public Input<string>? MinVersion { get; set; }

        /// <summary>
        /// PreferServerCipherSuites defines whether the server chooses a cipher suite among his own instead of among the client's. It is enabled automatically when minVersion or maxVersion is set. Deprecated: https://github.com/golang/go/issues/45430
        /// </summary>
        [Input("preferServerCipherSuites")]
        public Input<bool>? PreferServerCipherSuites { get; set; }

        /// <summary>
        /// SniStrict defines whether Traefik allows connections from clients connections that do not specify a server_name extension.
        /// </summary>
        [Input("sniStrict")]
        public Input<bool>? SniStrict { get; set; }

        public TLSOptionSpecArgs()
        {
        }
        public static new TLSOptionSpecArgs Empty => new TLSOptionSpecArgs();
    }
}
