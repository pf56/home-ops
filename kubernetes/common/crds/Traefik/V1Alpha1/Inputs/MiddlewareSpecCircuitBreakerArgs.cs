// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Traefik.V1Alpha1
{

    /// <summary>
    /// CircuitBreaker holds the circuit breaker configuration.
    /// </summary>
    public class MiddlewareSpecCircuitBreakerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CheckPeriod is the interval between successive checks of the circuit breaker condition (when in standby state).
        /// </summary>
        [Input("checkPeriod")]
        public InputUnion<int, string>? CheckPeriod { get; set; }

        /// <summary>
        /// Expression is the condition that triggers the tripped state.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// FallbackDuration is the duration for which the circuit breaker will wait before trying to recover (from a tripped state).
        /// </summary>
        [Input("fallbackDuration")]
        public InputUnion<int, string>? FallbackDuration { get; set; }

        /// <summary>
        /// RecoveryDuration is the duration for which the circuit breaker will try to recover (as soon as it is in recovering state).
        /// </summary>
        [Input("recoveryDuration")]
        public InputUnion<int, string>? RecoveryDuration { get; set; }

        public MiddlewareSpecCircuitBreakerArgs()
        {
        }
        public static new MiddlewareSpecCircuitBreakerArgs Empty => new MiddlewareSpecCircuitBreakerArgs();
    }
}
