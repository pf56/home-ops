// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Traefik.V1Alpha1
{

    /// <summary>
    /// Retry holds the retry middleware configuration. This middleware reissues requests a given number of times to a backend server if that server does not reply. As soon as the server answers, the middleware stops retrying, regardless of the response status. More info: https://doc.traefik.io/traefik/v2.10/middlewares/http/retry/
    /// </summary>
    public class MiddlewareSpecRetryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Attempts defines how many times the request should be retried.
        /// </summary>
        [Input("attempts")]
        public Input<int>? Attempts { get; set; }

        /// <summary>
        /// InitialInterval defines the first wait time in the exponential backoff series. The maximum interval is calculated as twice the initialInterval. If unspecified, requests will be retried immediately. The value of initialInterval should be provided in seconds or as a valid duration format, see https://pkg.go.dev/time#ParseDuration.
        /// </summary>
        [Input("initialInterval")]
        public InputUnion<int, string>? InitialInterval { get; set; }

        public MiddlewareSpecRetryArgs()
        {
        }
        public static new MiddlewareSpecRetryArgs Empty => new MiddlewareSpecRetryArgs();
    }
}
