// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Traefik.V1Alpha1
{

    /// <summary>
    /// ServiceUDP defines an upstream UDP service to proxy traffic to.
    /// </summary>
    public class IngressRouteUDPSpecRoutesServicesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name defines the name of the referenced Kubernetes Service.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Namespace defines the namespace of the referenced Kubernetes Service.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// NativeLB controls, when creating the load-balancer, whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP. The Kubernetes Service itself does load-balance to the pods. By default, NativeLB is false.
        /// </summary>
        [Input("nativeLB")]
        public Input<bool>? NativeLB { get; set; }

        /// <summary>
        /// Port defines the port of a Kubernetes Service. This can be a reference to a named port.
        /// </summary>
        [Input("port", required: true)]
        public InputUnion<int, string> Port { get; set; } = null!;

        /// <summary>
        /// Weight defines the weight used when balancing requests between multiple Kubernetes Service.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public IngressRouteUDPSpecRoutesServicesArgs()
        {
        }
        public static new IngressRouteUDPSpecRoutesServicesArgs Empty => new IngressRouteUDPSpecRoutesServicesArgs();
    }
}
